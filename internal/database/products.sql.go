// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: products.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createProduct = `-- name: CreateProduct :one
INSERT INTO products(
 ID, SKU, name,
 description, price, stockQty,
 category
 ) VALUES (
 $1, $2, $3,
 $4, $5, $6,
 $7
 ) RETURNING id, sku, name, description, price, stockqty, category
`

type CreateProductParams struct {
	ID          uuid.UUID
	Sku         string
	Name        string
	Description string
	Price       float32
	Stockqty    int32
	Category    string
}

func (q *Queries) CreateProduct(ctx context.Context, arg CreateProductParams) (Product, error) {
	row := q.db.QueryRowContext(ctx, createProduct,
		arg.ID,
		arg.Sku,
		arg.Name,
		arg.Description,
		arg.Price,
		arg.Stockqty,
		arg.Category,
	)
	var i Product
	err := row.Scan(
		&i.ID,
		&i.Sku,
		&i.Name,
		&i.Description,
		&i.Price,
		&i.Stockqty,
		&i.Category,
	)
	return i, err
}

const deleteProduct = `-- name: DeleteProduct :exec
DELETE FROM products WHERE SKU=$1
`

func (q *Queries) DeleteProduct(ctx context.Context, sku string) error {
	_, err := q.db.ExecContext(ctx, deleteProduct, sku)
	return err
}

const updateProduct = `-- name: UpdateProduct :one
UPDATE products SET 
SKU=$1, name=$2, description=$3,
price=$4, stockQty=$5, category=$6
WHERE SKU=$1
RETURNING id, sku, name, description, price, stockqty, category
`

type UpdateProductParams struct {
	Sku         string
	Name        string
	Description string
	Price       float32
	Stockqty    int32
	Category    string
}

func (q *Queries) UpdateProduct(ctx context.Context, arg UpdateProductParams) (Product, error) {
	row := q.db.QueryRowContext(ctx, updateProduct,
		arg.Sku,
		arg.Name,
		arg.Description,
		arg.Price,
		arg.Stockqty,
		arg.Category,
	)
	var i Product
	err := row.Scan(
		&i.ID,
		&i.Sku,
		&i.Name,
		&i.Description,
		&i.Price,
		&i.Stockqty,
		&i.Category,
	)
	return i, err
}
